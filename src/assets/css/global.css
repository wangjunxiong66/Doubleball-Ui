/*
每一条样式规则由三部分构成：选择符(selector)、属性(property)和属性值(value) ，基本格式如下:
selector {property: value}
(1) selector 可以采用多种形式，可以为文档中的HTML标记(例如<body>、<table>、 <p>等)，也可以是XML文档中的标记（貌似也包含HTML这个标记）（也包含文档中的class和id标记，如果是class则样式写成 “.class名字{}”，如果是id则样式写成“#id名字{}”）。
(2) property 是选择符指定的标记所包含的属性。
(3) value 指定了属性的值。如果定义选择符的多个属性，则属性和属性值为一组，组与组之间用“;”隔开，基本格式如下:
selector {property1: value1; property2: value2.... }
 */

/*
    当你让一个元素的高度设定为百分比高度时，是相对于父元素的高度根据百分比来计算高度。当没有给父元素设置高度（height）时或设置的高度值百分比不生效时，浏览器会根据其子元素来确定父元素的高度，所以当无法根据获取父元素的高度，也就无法计算自己高度。 换句话说，父元素的高度只是一个缺省值：height: auto;。当你要求浏览器根据这样一个缺省值来计算百分比高度时，只能得到undefined的结果，也就是一个null值，浏览器不会对这个值有任何的反应。
    html 的父元素可以理解成window，浏览器会将html填充填充完一个浏览器窗口。 设置html的height为具体的像素值，当其值大于浏览器窗口时，浏览器出现滚动条，当其值小于浏览器窗口时，同样会将html填充完整个浏览器窗口（可以设置背景测试）。设置html的height为百分比时，当其值大于100%出现滚动条，当小于100%时同样会将html填充完整个浏览器窗口（可以设置背景测试）。 但是子html的子元素的高度设置成百分比时，会按照html设置的高度值计算比例。
对于body的设置的高度小于浏览器窗口时，同样会填充满整个浏览器窗口（可以设置背景测试），但是其子元素的高度设置成百分比时，会按照body设置的高度值来计算比例。

关于height:100%和height:100vh的区别
    vh就是当前屏幕可见高度的1%，也就是说:
      height:100vh == height:100%;
    但是当元素没有内容时候，设置height:100%，该元素不会被撑开，此时高度为0。但是设置height:100vh，该元素会被撑开屏幕高度一致。
 */


/* 全局样式 */
HTML,body,#app{
    height: 100%;
    margin: 0;
    padding: 0;
}

/*卡片区域  ！important 提高样式级别 */
.el-card{
    /*!important，作用是提高指定样式规则的应用优先权（优先级）*/
    box-shadow: 0 1px 1px rgba(0,8,10,0.15)  !important;
}

/*表格样式*/
.el-table{
    margin-top: 15px;
    font-size: 12px;
    min-width: 350px;    /* 对应列的最小宽度，实际测试时发现列最小的宽度值是设置的min-width值的一半 */
}


